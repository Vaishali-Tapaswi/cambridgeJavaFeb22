Lab 3 - import java.util.ArrayList;
        import java.util.List;

        class Lab3Support extends Thread{
                private List<String> list ;

                public Lab3Support(List<String> list) {
                        this.list = list;
                }
                @Override
                public void run() {
                        for (int i = 0; i < 100; i++) {
                                list.add("str"+i);
                        }
                        System.out.println("Size of List = " + list.size());
                }

        }
        public class Lab3 {
        public static void main(String[] args) {
                List<String> list = new ArrayList<String>();
                Lab3Support t1 = new Lab3Support(list);
                Lab3Support t2 = new Lab3Support(list);
                t1.start();
                t2.start();

        }
        }
        Run code - multiple times to observe
                1. some times successful execution
                2. some times wrong size (199, 197 etc)
                3. some times ArrayIndexOutOfBoundsException exception
                
        Modify list.add code to be put in synchronized block    
                synchronized (list) {
                           list.add("str"+i);
                                }
           Run code - multiple times to observe
               final size of list 200 
Lab2 - 
        class Lab2Support1 extends Thread {

                public void run() {
                        System.out.println("Executing in Thread " + Thread.currentThread().getName());
                        for(int i = 0;i < 100;i++) {
                                System.out.println("Value of i = " + i +" in thread " + Thread.currentThread().getName());
                        }
                }
        }
        public class Lab2 {
                public static void main(String[] args) {

                        System.out.println("in Main, executing in Thread " + Thread.currentThread().getName());
                        System.out.println("111");
                        Lab2Support1 s1 = new Lab2Support1();
                        Lab2Support1 s2 = new Lab2Support1();
                        s1.start();
                        s2.start();
                        System.out.println("End of Main");

                }
        }

Lab1 - Write Code
        class Helper {
        private String name;
        public Helper(String name) {
          this.name = name;
        }

        public void run() {
          for (int i = 0; i< 100;i++) {
            System.out.print(name);
          }
        }
      }
      public class Lab1 {
        public static void main(String[] args) {
          Helper h1 = new Helper("-");
          Helper h2= new Helper("*");
          h1.run();
          h2.run();

        }
      }
  Run -> - will be printed 100 times and then * 
  Change the code -> class Helper extends Thread and instead of calling run method (h1.run())-> change this to h1.start() and h2.start()
  Run -> will observe time slicing (run 4/5 times)
  
